function customErrorValidityExample(elem) {
  const customErrorValidityExample = document.querySelector('#primaryError');

  customErrorValidityExample.addEventListener('auroSelect-valueSet', () => {
    if (+customErrorValidityExample.value > 2) {
      customErrorValidityExample.setAttribute('error', 'Quantity Exceeded');
    } else if (customErrorValidityExample.hasAttribute('error')) {
      customErrorValidityExample.removeAttribute('error');
    }
  });
}

function setErrorExample() {
  const setErrorExample = document.querySelector('#errorExample');

  document.querySelector('#undefinedValueExampleBtnAddError').addEventListener('click', () => {
    setErrorExample.setAttribute('error', 'custom error');
  });
  
  document.querySelector('#undefinedValueExampleBtnRemoveError').addEventListener('click', () => {
    setErrorExample.removeAttribute('error');
  });
}

function nestedSelectExample() {
  // JavaScript for the overflow: visible dialog
  let visOverflowDialog = document.getElementById('visibleOverflowDialog');
  let visibleOverflowButton = document.getElementById('overflowVisibleButton');
  let closeVisButtonElem = document.getElementById('closeVisButton');

  document.querySelector('#nestedSelect');

  visibleOverflowButton.addEventListener('click', () => {
    visOverflowDialog.setAttribute('open', 'true');
  });

  closeVisButtonElem.addEventListener('click', () => {
    visOverflowDialog.removeAttribute('open');
  });

  // JavaScript for the overflow: hidden dialog
  let hidOverflowDialog = document.getElementById('hiddenOverflowDialog');
  let hiddenOverflowButton = document.getElementById('overflowHiddenButton');
  let closeHidButtonElem = document.getElementById('closeHidButton');

  hiddenOverflowButton.addEventListener('click', () => {
    hidOverflowDialog.setAttribute('open', 'true');
  });

  closeHidButtonElem.addEventListener('click', () => {
    hidOverflowDialog.removeAttribute('open');
  });
}

function valueExample() {
  const valueExample = document.querySelector('#valueExample');

  document.querySelector('#validValueExampleBtn').addEventListener('click', () => {
    valueExample.value = 'arrival';
  });

  document.querySelector('#invalidValueExampleBtn').addEventListener('click', () => {
    valueExample.value = 'flight course';
  });

  document.querySelector('#undefinedValueExampleBtn').addEventListener('click', () => {
    valueExample.value = undefined;
  });
}

function valueExtractionExample() {
  const valueExtractionExample = document.querySelector('#valueExtraction');
  const valueExtractionBtn = document.querySelector('#valueExtractionBtn');

  valueExtractionBtn.addEventListener('click', () => {
    console.warn('Value selected:', valueExtractionExample.value);
    console.warn('Option selected:', valueExtractionExample.optionSelected);

    alert(`Value selected: ${valueExtractionExample.value}`);
  });
}

function initSelectApiExamples(initCount) {
  initCount = initCount || 0;

  try {
    customErrorValidityExample();
    setErrorExample();
    nestedSelectExample();
    valueExample();
    valueExtractionExample();
  } catch {
    if (initCount <= 20) {
      // setTimeout handles issue where content is sometimes loaded after the functions get called
      setTimeout(() => {
        initSelectApiExamples(initCount + 1);
      }, 100);
    }
  }
}

export { initSelectApiExamples };
